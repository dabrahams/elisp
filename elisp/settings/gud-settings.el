;; Debugging

;;
;; Path translation for cygwin
;;
(defun my-translate-cygwin-paths (file)
  "Adjust paths generated by cygwin so that they can be opened by tools running under emacs."

  ;; If it's not a windows system, or the file doesn't begin with /, don't do any filtering
  (if (and (eq system-type 'windows-nt) (string-match "^/" file))
        
      ;; Replace paths of the form /cygdrive/c/... or //c/... with c:/...
      (if (string-match "^\\(//\\|/cygdrive/\\)\\([a-zA-Z]\\)/" file)
          (setq file (file-truename (replace-match "\\2:/" t nil file)))

        ;; ELSE
        ;; Replace names of the form /... with <cygnus installation>/...
        ;; try to find the cygwin installation
        (let ((paths (parse-colon-path (getenv "path"))) ; Get $(PATH) from the environment
              (path nil)
              (found nil))

          ;; While there are unprocessed paths and cygwin is not found
          (while (and (not found) paths)
            (setq path (car paths)) ; grab the first path
            (setq paths (cdr paths)) ; walk down the list
          
            (if (and (string-match "/bin/?$" path) ; if it ends with /bin
                     (file-exists-p                ; and cygwin.bat is in the parent
                      (concat
                       (if (string-match "/$" path) path (concat path "/"))
                       "../cygwin.bat")))
                (progn
                  (setq found t) ; done looping
                  (string-match "^\\(.*\\)/bin/?$" path)
                  (setq file (file-truename (concat (match-string 1 path) file))))
              )))))
  file)

;; This "advice" is a way of hooking a function to supply additional
;; functionality. In this case, we want to pre-filter the argument to the
;; function gud-find-file which is used by the emacs debugging mode to open
;; files specified by debug info.
(defadvice gud-find-file (before my-gud-translate-cygwin-paths activate)
  (ad-set-arg 0 (my-translate-cygwin-paths (ad-get-arg 0)) t))

(defun my-gud-run-to-cursor ()
  (gud-tbreak)
  (gud-cont))

(defadvice compilation-find-file (before my-compilation-translate-cygwin-paths activate)
  (ad-set-arg 1 (my-translate-cygwin-paths (ad-get-arg 1)) t))

(global-set-key [f5] 'gud-cont)
(global-set-key [f11] 'gud-step)
(global-set-key [f10] 'gud-next)
(global-set-key [(shift f11)] 'gud-finish)
(global-set-key [(control f10)] 'my-gud-run-to-cursor)
(global-set-key [f9] 'gud-break)
(global-set-key [(shift f9)] 'gud-remove)

